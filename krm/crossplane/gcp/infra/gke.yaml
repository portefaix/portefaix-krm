# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: container.gcp.crossplane.io/v1beta2
kind: Cluster
metadata:
  name: portefaix-krm
spec:
  forProvider:
    # initialClusterVersion: "1.21"
    location: europe-west1-c
    masterAuth:
      # setting this master auth user name enables basic auth so that a client (e.g.,
      # provider-helm), can connect with the generated kubeconfig from the connection secret
      # username: admin
    networkConfig:
      enableIntraNodeVisibility: true
    loggingService: logging.googleapis.com/kubernetes
    monitoringService: monitoring.googleapis.com/kubernetes
    addonsConfig:
      cloudRunConfig:
        disabled: true
        loadBalancerType: LOAD_BALANCER_TYPE_UNSPECIFIED
      configConnectorConfig:
        enabled: false
      dnsCacheConfig:
        enabled: true
      gcePersistentDiskCsiDriverConfig:
        enabled: true
      horizontalPodAutoscaling:
        disabled: true
      httpLoadBalancing:
        disabled: true
      kubernetesDashboard:
        disabled: true
      networkPolicyConfig:
        disabled: false
    autopilot:
      enabled: false
    binaryAuthorization:
      enabled: false
    confidentialNodes:
      enabled: false
    # defaultMaxPodsConstraint:
    #    maxPodsPerNode: 110
    maintenancePolicy:
      window:
        dailyMaintenanceWindow:
    legacyAbac:
      enabled: false
    networkRef:
      name: portefaix-krm
    subnetworkRef:
      name: portefaix-krm
    networkPolicy:
      enabled: true
      provider: CALICO
    releaseChannel:
      channel: REGULAR
    # resourceLabels:
    #   service: kubernetes
    #   role: cluster
    #   made-by: crossplane
    # workloadIdentityConfig:
    #   workloadPool: portefaix-krm #.svc.id.goog
  writeConnectionSecretToRef:
    name: portefaix-krm-gke
    namespace: crossplane-system
  providerConfigRef:
    name: crossplane-gcp
---
apiVersion: container.gcp.crossplane.io/v1beta1
kind: NodePool
metadata:
  name: portefaix-krm-core
spec:
  forProvider:
    autoscaling:
      autoprovisioned: false
      enabled: true
      maxNodeCount: 4
      minNodeCount: 2
    clusterRef:
      name: portefaix-krm
    config:
      machineType: n1-standard-1
      sandboxConfig:
        type: gvisor
      diskSizeGb: 120
      diskType: pd-ssd
      imageType: cos_containerd
      # labels:
      #   service: kubernetes
      #   role: node
      #   made-by: crossplane
      tags:
        - kubernetes
        - nodes
      oauthScopes:
      - "https://www.googleapis.com/auth/devstorage.read_only"
      - "https://www.googleapis.com/auth/logging.write"
      - "https://www.googleapis.com/auth/monitoring"
      - "https://www.googleapis.com/auth/servicecontrol"
      - "https://www.googleapis.com/auth/service.management.readonly"
      - "https://www.googleapis.com/auth/trace.append"
    initialNodeCount: 2
    locations:
      - europe-west1-c
    management:
      autoRepair: true
      autoUpgrade: true
  providerConfigRef:
    name: crossplane-gcp
---
apiVersion: container.gcp.crossplane.io/v1beta1
kind: NodePool
metadata:
  name: portefaix-krm-ops
spec:
  forProvider:
    autoscaling:
      autoprovisioned: false
      enabled: true
      maxNodeCount: 3
      minNodeCount: 0
    clusterRef:
      name: portefaix-krm
    config:
      machineType: n1-standard-1
      sandboxConfig:
        type: gvisor
      diskSizeGb: 120
      diskType: pd-ssd
      imageType: cos_containerd
      # labels:
      #   service: kubernetes
      #   role: node
      #   made-by: crossplane
      tags:
        - kubernetes
        - nodes
      oauthScopes:
      - "https://www.googleapis.com/auth/devstorage.read_only"
      - "https://www.googleapis.com/auth/logging.write"
      - "https://www.googleapis.com/auth/monitoring"
      - "https://www.googleapis.com/auth/servicecontrol"
      - "https://www.googleapis.com/auth/service.management.readonly"
      - "https://www.googleapis.com/auth/trace.append"
    initialNodeCount: 0
    locations:
      - europe-west1-c
    management:
      autoRepair: true
      autoUpgrade: true
  providerConfigRef:
    name: crossplane-gcp
---
apiVersion: container.gcp.crossplane.io/v1beta1
kind: NodePool
metadata:
  name: portefaix-krm-misc
spec:
  forProvider:
    autoscaling:
      autoprovisioned: false
      enabled: true
      maxNodeCount: 3
      minNodeCount: 0
    clusterRef:
      name: portefaix-krm
    config:
      machineType: n1-standard-1
      sandboxConfig:
        type: gvisor
      diskSizeGb: 120
      diskType: pd-ssd
      imageType: cos_containerd
      # labels:
      #   service: kubernetes
      #   role: node
      #   made-by: crossplane
      tags:
        - kubernetes
        - nodes
      preemptible: true
      oauthScopes:
      - "https://www.googleapis.com/auth/devstorage.read_only"
      - "https://www.googleapis.com/auth/logging.write"
      - "https://www.googleapis.com/auth/monitoring"
      - "https://www.googleapis.com/auth/servicecontrol"
      - "https://www.googleapis.com/auth/service.management.readonly"
      - "https://www.googleapis.com/auth/trace.append"
    initialNodeCount: 0
    locations:
      - europe-west1-c
    management:
      autoRepair: true
      autoUpgrade: true
  providerConfigRef:
    name: crossplane-gcp
